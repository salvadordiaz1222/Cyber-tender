{"version":3,"sources":["components/Drink.js","components/Hero.js","components/Welcome.js","components/Navbar.js","components/Footer.js","utils/queries.js","utils/mutations.js","pages/QuestionsOptions.js","App.js","reportWebVitals.js","index.js"],"names":["Drink","id","Hero","className","Welcome","Navbar","M","window","document","addEventListener","elems","querySelectorAll","Sidenav","init","href","class","src","Component","Footer","QUERY_QUESTIONS","gql","GET_OPTIONS","QuestionsOptions","useState","currentQuestion","setCurrentQuestion","questions","setQuestions","questionOptions","setQuestionOptions","chooseOptions","setChosenOptions","results","setResults","useQuery","loading","data","dataQuestions","useMutation","getOptions","dataOptions","useEffect","variables","selectedOptions","nextKey","key","options","console","log","question","map","opt","Button","onClick","optionChosen","currentQuestionIndex","findIndex","q","nextQuestion","value","prev","onClickOption","httpLink","createHttpLink","uri","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1fa91c3a.chunk.js","sourcesContent":["import React from 'react'\n\nconst Drink = () => {\n    return (\n        <section id=\"welcome\">\n            \n                    <h1>\n                    Drink page\n                    <br/> \n                   The resulting drink will appear here\n                    </h1>\n                    \n        </section>\n    )\n}\n\nexport default Drink","import React from 'react'\n\nexport default function Hero() {\n    return (\n        <div className='neon-container grey darken-4'>\n            <div className='row'>\n                <h2 className='cyber'>Cyber</h2>\n                <h2 className='cyber2'>Bar</h2>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nconst Welcome = () => {\n    return (\n        <section id=\"welcome\">\n            \n                    <h1>\n                    Welcome page\n                    <br/> \n                    What'll Ya Have??\n                    </h1>\n                    <button> Click here to start</button>\n                    \n        </section>\n    )\n}\n\nexport default Welcome\n","import React, { Component } from 'react'\n\nclass Navbar extends Component {\n\n// SideNav slide function\n  componentDidMount(){\n    const M = window.M;\n    document.addEventListener('DOMContentLoaded', function() {\n      var elems = document.querySelectorAll('.sidenav');\n      var instances = M.Sidenav.init(elems, {});\n    });\n  }\n\n  render() {\n    return (\n      <div>\n          <nav className=\"grey darken-4\">\n    <div className=\"nav-wrapper\">\n    <a href=\"#\" data-target=\"slide-out\" class=\"sidenav-trigger show-on-large\"><i class=\"material-icons\">menu</i></a>\n      <a href=\"#\" className=\"brand-logo center\"></a>\n      <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n        <li><a className=\"modal-trigger\" href=\"collapsible.html\" data-target=\"modal1\">Sign Up</a></li>\n      </ul>\n    </div>\n    </nav>\n  <ul id=\"slide-out\" class=\"sidenav\">\n    <li><div class=\"user-view\">\n      <div class=\"background grey lighten-2\">\n        <img src=\"images/office.jpg\"/>\n      </div>\n      <a href=\"#user\"><img class=\"circle\" src=\"images/yuna.jpg\"/></a>\n      <a href=\"#name\"><span class=\"white-text name\">header</span></a>\n      <a href=\"#email\"><span class=\"white-text email\">subheader</span></a>\n    </div></li>\n    <li><a href=\"#!\"><i class=\"material-icons\">home</i>Home</a></li>\n    <li><a href=\"#!\"><i class=\"material-icons\">local_bar</i>The Cyber Bar</a></li>\n    <li><a href=\"#!\"><i class=\"material-icons\">assignment</i>Drink Menu</a></li>\n    <li><a href=\"#!\"><i class=\"material-icons\">people</i>About Us</a></li>\n  </ul>\n  </div>\n\n    )\n  }\n}\n\nexport default Navbar\n\n","import React, { Component } from 'react'\n\n\nclass Footer extends Component {\n    render() {\n        return (\n            <footer className=\"page-footer grey darken-4\">\n          <div className=\"container grey darken-3\">\n            <div className=\"row\">\n              <div className=\"col l6 s12\">\n                <h5 className=\"grey-text\">Developers</h5>\n                <p className=\"grey-text text-lighten-4\">Here are some links to look at more of our work, you can also contact us here for questions.</p>\n              </div>\n              <div className=\"col l4 offset-l2 s12\">\n                <h5 className=\"grey-text\">Github Links</h5>\n                <ul>\n                  <li><a className=\"grey-text text-lighten-3\" href=\"https://github.com/jpoulin587\">Jim Poulin</a></li>\n                  <li><a className=\"grey-text text-lighten-3\" href=\"https://github.com/salvadordiaz1222\">Salvador Diaz</a></li>\n                  <li><a className=\"grey-text text-lighten-3\" href=\"https://github.com/LRumgay\">Liam Rumgay</a></li>\n                  <li><a className=\"grey-text text-lighten-3\" href=\"#!\"></a></li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div className=\"footer-copyright\">\n            {/* footer copyright content */}\n          </div>\n        </footer>\n        )\n    }\n}\n\nexport default Footer\n","import { gql } from \"@apollo/client\";\n\nexport const QUERY_DRINKS = gql`\n  query Query {\n    drinks {\n      name\n      liquor\n      style\n      flavor\n      strong\n      ingredients\n      directions\n      image\n    }\n  }\n`;\n\nexport const QUERY_QUESTIONS = gql`\n  query Query {\n    questions {\n      question\n      key\n      order\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_OPTIONS = gql`\n  mutation getOptions($selectedOptions: [SelectedOptions]!, $nextKey: String) {\n    getOptions(selectedOptions: $selectedOptions, nextKey: $nextKey) {\n      data {\n        name\n        style\n        liquor\n        flavor\n        strong\n        ingredients\n        directions\n        image\n      }\n      options\n    }\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/client\";\n\nimport { Button } from \"@mui/material\";\nimport { QUERY_QUESTIONS } from \"../utils/queries\";\nimport { GET_OPTIONS } from \"../utils/mutations\";\n\nconst QuestionsOptions = () => {\n  const [currentQuestion, setCurrentQuestion] = useState({});\n  const [questions, setQuestions] = useState([]);\n  const [questionOptions, setQuestionOptions] = useState([]);\n  const [chooseOptions, setChosenOptions] = useState([]);\n  const [results, setResults] = useState([]);\n\n  const { loading, data: dataQuestions = {} } = useQuery(QUERY_QUESTIONS);\n\n  const [getOptions, { data: dataOptions = {} }] = useMutation(GET_OPTIONS);\n\n  useEffect(() => {\n    if (dataQuestions.questions) {\n      setQuestions(dataQuestions.questions);\n      setCurrentQuestion(dataQuestions.questions[0]);\n\n      getOptions({\n        variables: {\n          selectedOptions: [],\n          nextKey: dataQuestions.questions[0].key,\n        },\n      });\n    }\n    // call API options\n  }, [dataQuestions.questions]);\n\n  useEffect(() => {\n    if (dataOptions.getOptions) {\n      const { data, options } = dataOptions.getOptions;\n      console.log(data, options);\n      setResults(data);\n      setQuestionOptions(options);\n    }\n  }, [dataOptions]);\n\n  const onClickOption = (optionChosen) => {\n    const currentQuestionIndex = questions.findIndex(\n      (q) => currentQuestion.question === q.question\n    );\n    const nextQuestion = questions[currentQuestionIndex + 1];\n\n    getOptions({\n      variables: {\n        selectedOptions: [\n          ...chooseOptions,\n          { key: currentQuestion.key, value: optionChosen },\n        ],\n        nextKey: nextQuestion?.key,\n      },\n    });\n\n    setChosenOptions((prev) => [\n      ...prev,\n      { key: currentQuestion.key, value: optionChosen },\n    ]);\n\n    setCurrentQuestion(nextQuestion || {});\n  };\n  console.log({ results });\n  return (\n    <div>\n      <h1>{currentQuestion.question}</h1>\n      {questionOptions.map((opt) => (\n        <Button onClick={() => onClickOption(opt)}>{opt}</Button>\n      ))}\n    </div>\n  );\n};\n\nexport default QuestionsOptions;\n","import Drink from \"./components/Drink\";\nimport Hero from \"./components/Hero\";\nimport Welcome from \"./components/Welcome\";\nimport Navbar from \"./components/Navbar\";\nimport Questions from \"./components/Questions\";\nimport Footer from \"./components/Footer\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport QuestionsOptions from \"./pages/QuestionsOptions\";\nimport \"./App.css\";\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: httpLink,\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <BrowserRouter>\n        <main className=\"\">\n          <Navbar />\n          <Hero />\n          <Switch>\n            <Route exact path=\"/\">\n              <Welcome />\n            </Route>\n            <Route exact path=\"/Questions\">\n              <QuestionsOptions />\n            </Route>\n            <Route exact path=\"/Drink\">\n              <Drink />\n            </Route>\n          </Switch>\n          <Footer />\n        </main>\n      </BrowserRouter>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"materialize-css/dist/css/materialize.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}